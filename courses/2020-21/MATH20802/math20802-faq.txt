Academic Year 2020/21 - Term 2

MATH20802 - Statistical Methods 
Frequently Asked Questions

1) Is R programming examinable or not?

Answer (short): no

Answer (long):

In the tutorials and worksheets I frequently blend conventional questions (requiring analytical calculations) with R questions (for numerical calculations and plots).

There are many reasons for this. Most importantly, statistics is indeed a blend of theory, methods and computing.  So it is important that students get familiar with computational aspects as soon as possible. This is in fact the reason why R is used right from the start in year 1 (Introduction to Statistics).

Furthermore, many methods that we discuss in MATH20802 are much easier to understand when you see them visualised, e.g. plot of a likelihood function and its quadratic approximation.  Also, as soon as a statistical model becomes reasonably complex (e.g. in regression) many calculations can only be done numerically.  So we need to use R (or some other scientific programming language), we can't do all things by hand analytically, even in the simple toy examples usually discussed in a introductory course such as MATH20802.

In short, the aim of this module is that students learn to understand the underlying concepts behind the most common statistical methods.  So all R code is used to illustrate these concepts, but R and R programming itself is not the focus of the module.

In effect, R is really just a tool that you as statistician should be able to use for visualisation and calculations.  As you have noticed I also encourage the use of computer algebra program such as Maxima, e.g., to compute Taylor series. Because the course is not about calculus, but rather about using it to understand statistical methods and their approximations.

Regarding the R code that you have received together with the analytical solutions of the worksheets I note that it is deliberate that you got the R code upfront at the beginning of the term.

I expect that you are all able run the R scripts, reproduce the results, and try to understand what the script is doing.  Note that none of the R examples involve any advanced programming or extensive data analysis, in fact the R code is all very elementary, so you should be able to follow it easily.

However, in this module I don't not expect the students to produce (similar) R code themselves. In the exam they might see some R output and need to be able to interpret it, but R programming itself is not part of the module, and hence it is not examinable.



